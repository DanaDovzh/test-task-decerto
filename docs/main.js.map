{"version":3,"sources":["./src/app/panel/panel.component.html","./src/app/panel/panel.component.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/button/button.component.ts","./src/app/button/button.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\n  <mat-expansion-panel class=\"panel\" (opened)=\"panelOpenState = true\"\n                       (closed)=\"panelOpenState = false\">\n    <mat-expansion-panel-header class=\"panel__header\">\n      <mat-panel-title class=\"panel__title--container\">\n        <h1 class=\"panel__title\">List of goods</h1>\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <form [formGroup]=\"products\" class=\"panel__btns\">\n      <div *ngFor=\"let exp of objectKeys(products.value); let n=index\">\n       <app-button [formControlName]=\"n\"></app-button>\n      </div>\n    </form>\n  </mat-expansion-panel>\n","import { variable } from '@angular/compiler/src/output/output_ast';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder} from '@angular/forms';\n\n@Component({\n  selector: 'app-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.scss']\n})\nexport class PanelComponent implements OnInit {\n\n  constructor(private fb: FormBuilder) { }\n  panelOpenState: boolean = true;\n\n  products = this.fb.group([{\n    id: 1,\n    name: 'Books',\n    description: 'List of books'\n\n  },{\n    id: 2,\n    name: 'Tea and coffee',\n    description: 'Black or green tea; coffee with milk'\n\n  },{\n    id: 3,\n    name: 'Flowers',\n    description: 'Wonderful flowers'\n\n  },{\n    id: 4,\n    name: 'Tickets for movies',\n    description: 'New films for you'\n\n  },{\n    id: 5,\n    name: 'Clothes',\n    description: 'Comfortable clothes'\n\n  }, {\n    id: 6,\n    name: 'Sweets',\n    description: 'The biggest cake'\n\n  }])\n  objectKeys = Object.keys;\n  ngOnInit(): void {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  panelOpenState = false;\n  title = 'test-task-decerto';\n}\n","<app-panel></app-panel>\n<div class=\"footer\">\n  <button class=\"footer__btn\">\n    <a href=\"https://github.com/DanaDovzh/test-task-decerto\" target=\"_blank\" class=\"footer__btn__link\">\n      GitHub\n      <mat-icon class=\"footer__btn__icon\">home</mat-icon>\n    </a>\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { ButtonComponent } from './button/button.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\nimport { PanelComponent } from './panel/panel.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    ButtonComponent,\n    PanelComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatSnackBarModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, forwardRef, ViewEncapsulation } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ButtonComponent),\n      multi: true\n    }\n  ]\n})\n\nexport class ButtonComponent implements ControlValueAccessor {\n\n  constructor(private _snackBar: MatSnackBar){}\n  onChange: any;\n  onTouch: any;\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  writeValue(infoBtn) {\n    this.infoBtn = infoBtn;\n  }\n\n  infoBtn;\n  openSnackBar(message: string) {\n    console.log(this.infoBtn);\n    this._snackBar.open(message, 'Close');\n  }\n}\n","<button\n    mat-raised-button\n    (click)=\"openSnackBar(infoBtn.description)\"\n    class=\"btn__main\">\n  {{infoBtn.name}}\n  <mat-icon\n    class=\"btn__icon\"\n    matTooltipClass=\"btn__icon--tooltip\"\n    aria-hidden=\"false\"\n    aria-label=\"Example home icon\"\n    [matTooltip]=\"'Info about ' + infoBtn.name.toLowerCase()\"\n    mat-raised-above [matTooltipPosition]=\"'above'\">help</mat-icon>\n</button>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}